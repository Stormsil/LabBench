(*==============================================================================
    Название:    PRG_EquipmentProcessing
    Автор:       Редько А.
    Дата:        2025-04-27
    Версия:      1.0
    
    Описание:    Программа управления оборудованием стенда
==============================================================================*)
PROGRAM PRG_EquipmentProcessing
VAR
    fbPropValve: FB_PropValve;    (* Пропорциональный кран *)
    fbEMValve: FB_EMValve;        (* Электромагнитный клапан *)
    


    bEmergencyStop: BOOL := FALSE; (* Общий сигнал аварийного останова *)
END_VAR

(* ======================================================================== *)
(* Обработка общих сигналов для всех устройств                              *)
(* ======================================================================== *)

(* Проверка общего сигнала аварийного останова *)
(* Здесь можно добавить логику для определения аварийных ситуаций *)

(* ======================================================================== *)
(* Управление пропорциональным краном                                       *)
(* ======================================================================== *)

(* Установка внешней команды аварийного останова *)
stPropValve.stCommands.bExtEmergencyStop := bEmergencyStop;

(* Вызов функционального блока *)
fbPropValve(
    stValve := stPropValve,
    rFeedbackSignal := AI_Position_PropValve,  (* Сигнал уже масштабирован в конфигурации *)
    bEnable := TRUE,
    rControlSignal => AO_SetPosition_PropValve
);

(* ======================================================================== *)
(* Управление электромагнитным клапаном                                     *)
(* ======================================================================== *)

(* Обновление порога предупреждения из SCADA *)
stEMValve.tWarningThreshold := GVL_in_SCADA_EMValve_WarningTime;

(* Вызов функционального блока *)
fbEMValve(
    stValve := stEMValve,
    bOpenCommand := GVL_in_SCADA_EMValve_Open,
    bEmergencyStop := bEmergencyStop,
    bEnable := TRUE,
    bOutputSignal => DO_Open_Valve
);
